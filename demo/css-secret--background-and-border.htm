<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>css:background-and-border</title>
  </head>

  <body style="background: rgba(0, 0, 0, 0.1); display: flex; flex-wrap: wrap">
    <div style="width: 200px; height: 200px; margin: 10px; border: 10px solid hsla(0, 0%, 100%, 0.5); /* border:10px solid rgba(255,255,255,.5); */ background: white; background-clip: padding-box">
      background-clip实现半透明边框
    </div>

    <div style="width: 200px; height: 200px; margin: 50px; background: yellowgreen; box-shadow: 0 0 0 10px #655, 0 0 0 15px deeppink, inset 0 0px 8px 10px rgba(0, 0, 0, 0.6)">
      box-shadow实现多重边框
    </div>

    <div style="width: 200px; height: 200px; margin: 50px; background: yellowgreen; border: 10px solid #655; outline: 5px solid deeppink; outline-offset: 5px; border-radius: 50%">
      outline实现多重边框,设置border-radius后可能产生outline不能与border贴合圆角的bug
    </div>

    <div
      style="
        width: 200px;
        height: 200px;
        margin: 50px;
        padding: 10px;
        background: linear-gradient(red, orange) no-repeat #58a right 10px bottom 10px/50px 50px;
        background-origin: content-box;
        background-position: calc(100% - 10px) calc(100% - 10px);
      "
    >
      灵活的背景定位。默认情况下， background-position 是以 padding box 为准的， 因此如果background-origin设置了其他值（content-box|border-box）时，background-position的只会有所以偏差
    </div>

    <div style="width: 200px; height: 200px; margin: 50px; background: tan; border-radius: 0.8em; padding: 1em; outline: 0.6em solid #655">边框内圆角。 因为outline只能是直角，所以圆角会有缺陷</div>

    <div style="width: 200px; height: 200px; margin: 50px; background: tan; border-radius: 0.8em; padding: 1em; box-shadow: 0 0 0 0.6em #655; outline: 0.6em solid #655">
      边框内圆角。 根据 勾股定理解决圆角缺陷，可以用box-shadow设置实心阴影长度 圆半径r
    </div>

    <div style="width: 200px; height: 200px; margin: 50px; background: linear-gradient(#fb3, #58a)">条纹背景。linear-gradient渐变</div>

    <div style="width: 200px; height: 200px; margin: 50px; background: linear-gradient(#fb3 20%, #58a 80%)">条纹背景。linear-gradient渐变</div>
    <p>如果我们把第二个色标的位置值设置为 0 ，那它的位置就 总是会被浏览器调整为前一个色标的位置值</p>
    <div style="width: 200px; height: 200px; margin: 50px; background: linear-gradient(#fb3 33.3%, #58a 0, #58a 66.6%, yellowgreen 0); background-size: 100% 45px">
      条纹背景。linear-gradient横纹渐变。
    </div>

    <div style="width: 200px; height: 200px; margin: 50px; background: linear-gradient(to right, /* 或 90deg */ #fb3 50%, #58a 0); background-size: 30px 100%">条纹背景。linear-gradient竖纹渐变。</div>

    <div style="width: 200px; height: 200px; margin: 50px; background: linear-gradient(45deg, #fb3 25%, #58a 0, #58a 50%, #fb3 0, #fb3 75%, #58a 0); background-size: 30px 30px">
      条纹背景。斜纹渐变。需要勾股定理计算大小
    </div>

    <div style="width: 200px; height: 200px; margin: 50px; background: repeating-linear-gradient(45deg, #fb3 0, #fb3 25%, #58a 0, #58a 50%); background-size: 42.426406871px 42.426406871px">
      条纹背景。repeating-linear-gradient斜纹渐变。需要勾股定理计算大小
    </div>

    <div
      style="
        width: 200px;
        height: 200px;
        margin: 50px;
        background: white;
        background-image: linear-gradient(90deg, rgba(200, 0, 0, 0.5) 50%, transparent 0), linear-gradient(rgba(200, 0, 0, 0.5) 50%, transparent 0);
        background-size: 30px 30px;
      "
    >
      复杂的背景图案。linear-gradient网格
    </div>

    <div
      style="
        width: 200px;
        height: 200px;
        margin: 50px;
        background: #58a;
        background-image: linear-gradient(white 1px, transparent 0), linear-gradient(90deg, white 1px, transparent 0);
        background-size: 30px 30px;
      "
    >
      复杂的背景图案。linear-gradient网格
    </div>

    <div
      style="
        width: 200px;
        height: 200px;
        margin: 50px;
        background: #58a;
        background-image: linear-gradient(white 2px, transparent 0), linear-gradient(90deg, white 2px, transparent 0), linear-gradient(hsla(0, 0%, 100%, 0.3) 1px, transparent 0),
          linear-gradient(90deg, hsla(0, 0%, 100%, 0.3) 1px, transparent 0);
        background-size: 75px 75px, 75px 75px, 15px 15px, 15px 15px;
      "
    >
      复杂的背景图案。linear-gradient单元格
    </div>

    <div style="width: 200px; height: 200px; margin: 50px; background: #655; background-image: radial-gradient(tan 30%, transparent 0); background-size: 30px 30px">
      复杂的背景图案。radial-gradient波点
    </div>

    <div
      style="
        width: 200px;
        height: 200px;
        margin: 50px;
        background: #655;
        background-image: radial-gradient(tan 30%, transparent 0), radial-gradient(tan 30%, transparent 0);
        background-size: 30px 30px;
        background-position: 0 0, 15px 15px;
      "
    >
      复杂的背景图案。radial-gradient波点
    </div>

    <div
      style="
        width: 200px;
        height: 200px;
        margin: 50px;
        background: #eee;
        background-image: linear-gradient(45deg, #bbb 25%, transparent 0), linear-gradient(45deg, transparent 75%, #bbb 0), linear-gradient(45deg, #bbb 25%, transparent 0),
          linear-gradient(45deg, transparent 75%, #bbb 0);
        background-position: 0 0, 15px 15px, 15px 15px, 30px 30px;
        background-size: 30px 30px;
      "
    >
      复杂的背景图案。radial-gradient 棋盘
    </div>

    <div
      style="
        width: 200px;
        height: 200px;
        margin: 50px;
        background: #eee;
        background-image: linear-gradient(45deg, rgba(0, 0, 0, 0.25) 25%, transparent 0, transparent 75%, rgba(0, 0, 0, 0.25) 0),
          linear-gradient(45deg, rgba(222, 0, 0, 0.25) 25%, transparent 0, transparent 75%, rgba(255, 0, 0, 0.25) 0);
        background-position: 0 0, 15px 15px;
        background-size: 30px 30px;
        /* background-repeat-y: no-repeat;
    background-repeat-x: no-repeat; */
      "
    >
      复杂的背景图案。radial-gradient 棋盘
    </div>

    <svg xmlns="http://www.w3.org/2000/svg" width="100" height="100" fill-opacity=".25">
      <rect x="50" width="50" height="50" />
      <rect y="50" width="50" height="50" />
    </svg>

    <div
      style="
        width: 200px;
        height: 200px;
        margin: 50px;
        background: #eee
          url('data:image/svg+xml;utf8,<svg xmlns=&quot;http://www.w3.org/2000/svg&quot; width=&quot;100&quot; height=&quot;100&quot; fill-opacity=&quot;.25&quot;><rect x=&quot;50&quot; width=&quot;50&quot; height=&quot;50&quot; /><rect y=&quot;50&quot; width=&quot;50&quot; height=&quot;50&quot; /></svg>');
        background-size: 30px 30px;
      "
    >
      复杂的背景图案。svg 棋盘
    </div>

    <div style="width: 200px; height: 200px; margin: 50px; background: repeating-conic-gradient(#bbb 0, #bbb 25%, #eee 0, #eee 50%); background-size: 30px 30px">
      复杂的背景图案。repeating-conic-gradient角向渐变 棋盘
    </div>

    <div style="width: 200px; height: 200px; margin: 50px; background: conic-gradient(red, yellow, lime, aqua, blue, fuchsia, red)">复杂的背景图案。repeating-conic-gradient角向渐变</div>

    <p style="width: 100vw">伪随机背景</p>

    <div
      style="
        width: 200px;
        height: 200px;
        margin: 50px;
        background: hsl(20, 40%, 90%);
        background-image: linear-gradient(90deg, #fb3 11px, transparent 0), linear-gradient(90deg, #ab4 23px, transparent 0), linear-gradient(90deg, #655 23px, transparent 0);
        background-size: 83px 100%, 61px 100%, 41px 100%;
      "
    >
      复杂的背景图案。linear-gradient 伪随机背景
    </div>

    <p style="width: 100vw">连续的图像边框</p>

    <div
      style="
        width: 200px;
        height: 200px;
        margin: 50px;
        padding: 1em;
        border: 1em solid transparent;
        background: linear-gradient(white, white), repeating-conic-gradient(#bbb 0, #bbb 25%, #eee 0, #eee 50%);
        background-size: cover;
        background-clip: padding-box, border-box;
        background-origin: border-box;
      "
    >
      复杂的背景图案。linear-gradient 连续的图像边框
    </div>

    <div
      style="
        width: 200px;
        height: 200px;
        margin: 50px;
        padding: 1em;
        border: 1em solid transparent;
        background: linear-gradient(white, white) padding-box,
          repeating-linear-gradient(-45deg, red 0, red 12.5%, transparent 0, transparent 25%, #58a 0, #58a 37.5%, transparent 0, transparent 50%) 0 / 5em 5em;
        animation: ants 12s linear infinite;
      "
    >
      复杂的背景图案。background-image：linear-gradient \background-origin:padding-box 老式信封
    </div>

    <style>
      @keyframes ants {
        to {
          background-position: 100%;
        }
      }

      .marching-ants {
        padding: 1em;
        border: 1px solid transparent;
        background: linear-gradient(white, white) padding-box, repeating-linear-gradient(-45deg, black 0, black 25%, white 0, white 50%) 0 / 0.6em 0.6em;
        animation: ants 12s linear infinite;
      }
    </style>

    <div
      style="
        width: 200px;
        height: 200px;
        margin: 50px;
        padding: 1em;
        border: 16px solid transparent;
        border-image: 16 repeating-linear-gradient(-45deg, red 0, red 1em, transparent 0, transparent 2em, #58a 0, #58a 3em, transparent 0, transparent 4em);
      "
    >
      复杂的背景图案。border-image：linear-gradient \background-origin:padding-box 老式信封
    </div>
  </body>
</html>
