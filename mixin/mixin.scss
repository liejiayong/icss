/*background*/
// background image
@mixin bgimg($width, $url) {
  background: url(#{$url}) no-repeat top center / #{$width} auto;
}
@mixin bgimgc($width, $url) {
  background: url(#{$url}) no-repeat center / #{$width} auto;
}
@mixin bgimg-repeat($width, $url) {
  background: url(#{$url}) repeat / #{$width} auto;
}

/*input*/
// input color
@mixin inputcolor($color) {
  color: $color;
  &::-webkit-input-placeholder {
    color: $color;
  }
  &::-moz-placeholder {
    color: $color;
  }
  &::-ms-input-placeholder {
    color: $color;
  }
  &::-moz-placeholder {
    color: $color;
  }
}
// input background
@mixin inputbg($color) {
  background-color: $color;
  &::-webkit-input-placeholder {
    background-color: $color;
  }
  &::-moz-placeholder {
    background-color: $color;
  }
  &::-ms-input-placeholder {
    background-color: $color;
  }
  &::-moz-placeholder {
    background-color: $color;
  }
}
// input align
@mixin input-align($just) {
  text-align: $just;
  text-align-last: $just;
}

/*text*/
// line-height
@mixin lh($height) {
  height: $height;
  line-height: $height;
}
// text nowrap
@mixin nowrap {
  white-space: nowrap;
  text-overflow: ellipsis;
  overflow: hidden;
}
// text nowrap within $line
@mixin ellipsis($line) {
  white-space: normal;
  overflow: hidden;
  display: -webkit-box;
  -webkit-line-clamp: $line; // 值得注意的是，在使用 -webkit-line-clamp 的方案的时候，一定要配合 white-space: normal 允许换行，而不是不换行
  -webkit-box-orient: vertical;
  text-overflow: ellipsis;
}

/*shape*/
// triangle
@mixin triangle($width: 10px) {
  border-top: $width dashed transparent;
  border-bottom: $width dashed transparent;
  border-left: $width dashed transparent;
  border-right: $width dashed transparent;
  height: 0;
  width: 0;
  font-size: 0;
  line-height: 0;
  overflow: hidden;
}
// 1px border for high retina mobile
@mixin border-1px($color: '') {
  position: relative;
  &::after {
    display: block;
    position: absolute;
    left: 0;
    bottom: 0;
    width: 100%;
    border-top: 1px solid $color;
    content: ' ';
  }
}
// border-none
@mixin border-none() {
  &:after {
    display: none;
  }
}
/* table border */
@mixin table-border($config: 1px solid #e3ca92) {
  table {
    thead tr {
      td {
        height: 45px;
        border-left: $config;
        border-top: $config;
        &:last-of-type {
          border-right: $config;
        }
      }
    }
    tbody tr {
      &:last-of-type td {
        border-bottom: $config;
      }
      td {
        height: 45px;
        border-left: $config;
        border-top: $config;
        &:last-of-type {
          border-right: $config;
        }
      }
    }
  }
}
/* 1px border */
@mixin thinBorder($directionMaps: bottom, $color: #ccc, $position: after) {
  // 是否只有一个方向
  $isOnlyOneDir: string==type-of($directionMaps);

  @if ($isOnlyOneDir) {
    $directionMaps: ($directionMaps);
  }

  @each $directionMap in $directionMaps {
    border-#{$directionMap}: 1px solid $color;
  }

  @media only screen and (-webkit-min-device-pixel-ratio: 2) {
    & {
      position: relative;

      // 删除1像素密度比下的边框
      @each $directionMap in $directionMaps {
        border-#{$directionMap}: none;
      }
    }

    &:#{$position} {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      display: block;
      width: 200%;
      height: 200%;
      transform: scale(0.5);
      box-sizing: border-box;
      padding: 1px;
      transform-origin: 0 0;
      pointer-events: none;
      border: 0 solid $color;

      @each $directionMap in $directionMaps {
        border-#{$directionMap}-width: 1px;
      }
    }
  }

  @media only screen and (-webkit-min-device-pixel-ratio: 3) {
    &:#{$position} {
      width: 300%;
      height: 300%;
      transform: scale(0.33);
    }
  }
}
/* 生成.border-top-1px等4个单侧边框; */
@each $dir in (top, right, bottom, left) {
  .border-#{$dir}-#{1}px {
    @include thinBorder($dir);
  }
}
/* 使用:before去生成边框 */
.border-top-before {
  @include thinBorder(top, red, 0, before);
}
/* 生成"红色"的多侧边框.border-top-left-red-1px */
.border-top-left-red-1px {
  @include thinBorder((top, left), red);
}
/* 生成带100px圆角的边框 .border-top-left-round-1px */
.border-top-left-red-1px {
  @include thinBorder(top, red, 100px);
}

/* button */
@mixin btnEdgeExpanding($width: 5px, $position: '') {
  @if $position != '' {
    position: $position;
  }
  overflow: initial !important;
  &::after {
    content: '';
    position: absolute;
    top: -$width;
    right: -$width;
    bottom: -$width;
    left: -$width;
  }
}

/*status*/
// clear float
@mixin clearfix {
  zoom: 1;
  &::after {
    content: '\0020';
    clear: both;
    display: block;
    height: 0;
    visibility: hidden;
    opacity: 0;
    font-size: 0;
  }
}
// flex layout
/* example: @include flexs(center, center, wrap); */
@mixin flexs($h: '', $v: '', $wrap: '') {
  display: flex;
  @if $h != '' {
    justify-content: $h;
  }
  @if $v != '' {
    align-items: $v;
  }
  @if $wrap != '' {
    flex-wrap: $wrap;
  }
}
/* 
@include flex-width();
@include flex-width(1);
@include flex-width(auto);
@include flex-width(20px, 1 1);
*/
@mixin flex-width($width: 1, $flex: '') {
  @if $width == 1 {
    flex: 1;
  } @else if $width == auto {
    flex: auto;
  } @else {
    @if $flex == '' {
      flex: 0 0 $width;
      width: $width;
    } @else {
      flex: $flex $width;
      width: $width;
    }
  }
}

/*scroll*/
// 滚动卡顿
@mixin scroll-state($scroll: '') {
  @if $scroll != '' {
    -ms-scroll-chaining: none;
    overscroll-behavior: contain;
  }
  scroll-behavior: smooth;
  -webkit-overflow-scrolling: touch;
}
@mixin scroll_init {
  scroll-behavior: smooth;
  -webkit-overflow-scrolling: touch;
}
@mixin scroll_static {
  position: static;
  scroll-behavior: smooth;
  -webkit-overflow-scrolling: touch;
}
@mixin scroll_chaining {
  -ms-scroll-chaining: none;
  overscroll-behavior: contain;
  scroll-behavior: smooth;
  -webkit-overflow-scrolling: touch;
}
